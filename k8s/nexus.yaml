apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus
spec:
  selector:
    matchLabels:
      app: nexus
  template:
    metadata:
      labels:
        app: nexus
    spec:
      initContainers:
      - name: init-nexus-data
        image: busybox
        command: ['sh', '-c', 'chown -R 200:200 /nexus-data']
        volumeMounts:
        - name: nexus-data
          mountPath: /nexus-data
      - name: wait-for-postgres
        image: postgres:13
        command: ['sh', '-c', 'apt-get update && apt-get install -y netcat traceroute && rm -rf /var/lib/apt/lists/* && for i in $(seq 1 30); do echo "Attempt $i: Starting checks..."; echo "DNS lookup for postgres:"; getent hosts postgres.default.svc.cluster.local; echo "Network route to postgres:"; traceroute postgres.default.svc.cluster.local 2>&1 || true; echo "Testing port connectivity:"; nc -zv postgres.default.svc.cluster.local 5432 2>&1 || true; echo "Testing PostgreSQL connection:"; if PGPASSWORD=$POSTGRES_PASSWORD pg_isready -h postgres.default.svc.cluster.local -p 5432 -U postgres; then echo "PostgreSQL is ready!"; exit 0; fi; echo "PostgreSQL is not ready yet. Waiting 10 seconds..."; sleep 10; done; echo "Could not connect to PostgreSQL after 30 attempts"; exit 1']
        command: ['sh', '-c', 'for i in $(seq 1 30); do echo "Attempt $i: Starting checks..."; echo "DNS lookup for postgres:"; getent hosts postgres; echo "Network route to postgres:"; traceroute postgres 2>&1 || true; echo "Testing port connectivity:"; nc -zv postgres 5432 2>&1 || true; echo "Testing PostgreSQL connection:"; if PGPASSWORD=$POSTGRES_PASSWORD pg_isready -h postgres -p 5432 -U postgres; then echo "PostgreSQL is ready!"; exit 0; fi; echo "PostgreSQL is not ready yet. Waiting 10 seconds..."; sleep 10; done; echo "Could not connect to PostgreSQL after 30 attempts"; exit 1']
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
      containers:
      - name: nexus
        image: sonatype/nexus3:3.68.1
        ports:
        - containerPort: 8081
        volumeMounts:
        - name: nexus-data
          mountPath: /nexus-data
        env:
        - name: NEXUS_CONTEXT
          value: /
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: NEXUS_DB_URL
          value: jdbc:postgresql://postgres.default.svc.cluster.local:5432/nexus
        - name: NEXUS_DB_USER
          value: postgres
        - name: NEXUS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 120
          periodSeconds: 30
      volumes:
      - name: nexus-data
        persistentVolumeClaim:
          claimName: nexus-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nexus
spec:
  selector:
    app: nexus
  ports:
  - port: 8081
    targetPort: 8081
  type: ClusterIP
